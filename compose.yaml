services:
  frontend:
    build:
      context: frontend
      target: development
    stdin_open: true
    ports:
      - 4000:4000
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    restart: always
    depends_on:
      - backend
      - traefik
    expose:
      - 4000
    labels:
      - "traefik.http.routers.frontend.rule=Host(`app.localhost`) && PathPrefix(`/`)"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=4000"


  backend:
    restart: always
    build:
      context: backend
      target: development
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mongo
      - traefik
    ports:
      - "3000:3000"
    expose: 
      - 3000
    environment:
      - NODE_ENV_PROFILE=production
    labels:
      - "traefik.http.routers.backend.rule=Host(`app.localhost`) && PathPrefix(`/api`)" # Définir la règle de routage pour l'API
      - "traefik.http.services.backend.loadbalancer.server.port=3000" # Définir le port du service

  mongo:
    restart: always
    image: mongo:4.2.0
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
    expose:
      - 27017
    depends_on:
      - traefik   

  traefik:
    image: traefik:v2.11
    command:
      - --api.insecure=true
      - --providers.docker=true
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
